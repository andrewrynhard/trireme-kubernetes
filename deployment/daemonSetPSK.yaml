apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: trireme
  namespace: kube-system
data:
  trireme.log_level: trace
  trireme.auth_type: PSK
  trireme.collector_endpoint: http://10.60.2.15:8086
  trireme.collector_user: aporeto
  trireme.collector_password: aporeto
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: aporeto
  name: trireme
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        app: trireme
    spec:
      serviceAccountName: trireme-account
      hostNetwork: true
      hostPID: true
      containers:
        -  name: trireme
           image: aporeto/trireme-kubernetes:latest
           env:
             - name: TRIREME_LOGLEVEL
               valueFrom:
                 configMapKeyRef:
                   key: trireme.log_level
                   name: trireme
                   optional: true
             - name: TRIREME_AUTHTYPE
               valueFrom:
                 configMapKeyRef:
                   key: trireme.auth_type
                   name: trireme
             - name: TRIREME_COLLECTORENDPOINT
               valueFrom:
                 configMapKeyRef:
                   key: trireme.collector_endpoint
                   name: trireme
             - name: TRIREME_COLLECTORUSER
               valueFrom:
                 configMapKeyRef:
                   key: trireme.collector_user
                   name: trireme
             - name: TRIREME_COLLECTORPASS
               valueFrom:
                 configMapKeyRef:
                   key: trireme.collector_password
                   name: trireme
             - name: TRIREME_PSK
               valueFrom:
                 secretKeyRef:
                   name: trireme
                   key: triremepsk
             - name: TRIREME_KUBENODENAME
               valueFrom:
                 fieldRef:
                   fieldPath: spec.host
           securityContext:
             privileged: true
           volumeMounts:
             - mountPath: /var/run
               name: dockersock
               readOnly: false

      volumes:
        - name: dockersock
          hostPath:
            path: /var/run
